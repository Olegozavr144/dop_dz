#include <iostream>
#include <stack>
#include <queue>
#include <cmath>

using namespace std;

bool is_prime(int n) {
    if (n <= 1) {
        return false;
    }
    for (int i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

bool is_perfect_square(int n) {
    int root = sqrt(n);
    return root * root == n;
}

int main() {
    int n;
    cin >> n;

    stack<int> primes;
    stack<int> squares;
    queue<int> others;

    for (int i = 0; i < n; i++) {
        int x;
        cin >> x;
        if (is_prime(x)) {
            primes.push(x);
        }
        else if (is_perfect_square(x)) {
            squares.push(x);
        }
        else {
            others.push(x);
        }
    }

    while (!primes.empty()) {
        cout << primes.top() << " ";
        primes.pop();
    }
    cout << endl;

    stack<int> secsquares;
    while (!squares.empty()) {
        secsquares.push(squares.top());
        squares.pop();
    }

    while (!secsquares.empty()) {
        cout << secsquares.top() << " ";
        secsquares.pop();
    }
    cout << endl;

    int count = 0;
    while (!others.empty()) {
        count++;
        others.pop();
    }
    cout << count << endl;

    return 0;
}
