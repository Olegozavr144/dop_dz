#include <iostream>
#include <set>
#include <vector>
#include <cctype>
#include <string>

using namespace std;

void split(const string& s, vector<string>& words) {
    size_t pos = 0;
    while (pos < s.size()) {
        size_t end = s.find(' ', pos);
        if (end == string::npos) {
            end = s.size();
        }
        words.push_back(s.substr(pos, end - pos));
        pos = end + 1;
    }
}

int main() {
    string s1, s2;
    getline(cin, s1);
    getline(cin, s2);

    vector<string> words1, words2;
    split(s1, words1);
    split(s2, words2);

    set<string> set1, set2;
    for (const string& word : words1) {
        string lowercase_word;
        for (char c : word) {
            lowercase_word += tolower(c);
        }
        set1.insert(lowercase_word);
    }
    for (const string& word : words2) {
        string lowercase_word;
        for (char c : word) {
            lowercase_word += tolower(c);
        }
        set2.insert(lowercase_word);
    }

    vector<string> common, unique;
    for (const string& word : set1) {
        if (set2.count(word) > 0) {
            common.push_back(word);
        }
        else {
            unique.push_back(word);
        }
    }

    cout << "Common words: ";
    for (const string& word : common) {
        cout << word << " ";
    }
    cout << endl;

    cout << "Unique words in s1: ";
    for (const string& word : unique) {
        cout << word << " ";
    }
    cout << endl;

    return 0;
}
